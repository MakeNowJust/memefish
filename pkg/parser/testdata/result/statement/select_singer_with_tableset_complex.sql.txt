--- select_singer_with_tableset_complex.sql
SELECT * FROM Singers
UNION ALL
(
  SELECT * FROM Singers
  UNION DISTINCT
  (
    SELECT * FROM Singers
    INTERSECT ALL
    (
      SELECT * FROM Singers
      INTERSECT DISTINCT
      (
        SELECT * FROM Singers
        EXCEPT ALL
        (
          SELECT * FROM Singers
          EXCEPT DISTINCT
          SELECT * FROM Singers
        )
      )
    )
  )
)

--- AST
&parser.QueryStatement{
  Hint:  (*parser.Hint)(nil),
  Query: &parser.CompoundQuery{
    Op:       "UNION",
    Distinct: false,
    Queries:  []parser.QueryExpr{
      &parser.Select{
        pos:      0,
        Distinct: false,
        AsStruct: false,
        Results:  []parser.SelectItem{
          &parser.Star{
            pos: 7,
          },
        },
        From: &parser.From{
          pos:    9,
          Source: &parser.TableName{
            Table: &parser.Ident{
              pos:  14,
              end:  21,
              Name: "Singers",
            },
            Hint:   (*parser.Hint)(nil),
            As:     (*parser.AsAlias)(nil),
            Sample: (*parser.TableSample)(nil),
          },
        },
        Where:   (*parser.Where)(nil),
        GroupBy: (*parser.GroupBy)(nil),
        Having:  (*parser.Having)(nil),
        OrderBy: (*parser.OrderBy)(nil),
        Limit:   (*parser.Limit)(nil),
      },
      &parser.SubQuery{
        pos:   32,
        end:   368,
        Query: &parser.CompoundQuery{
          Op:       "UNION",
          Distinct: true,
          Queries:  []parser.QueryExpr{
            &parser.Select{
              pos:      36,
              Distinct: false,
              AsStruct: false,
              Results:  []parser.SelectItem{
                &parser.Star{
                  pos: 43,
                },
              },
              From: &parser.From{
                pos:    45,
                Source: &parser.TableName{
                  Table: &parser.Ident{
                    pos:  50,
                    end:  57,
                    Name: "Singers",
                  },
                  Hint:   (*parser.Hint)(nil),
                  As:     (*parser.AsAlias)(nil),
                  Sample: (*parser.TableSample)(nil),
                },
              },
              Where:   (*parser.Where)(nil),
              GroupBy: (*parser.GroupBy)(nil),
              Having:  (*parser.Having)(nil),
              OrderBy: (*parser.OrderBy)(nil),
              Limit:   (*parser.Limit)(nil),
            },
            &parser.SubQuery{
              pos:   77,
              end:   366,
              Query: &parser.CompoundQuery{
                Op:       "INTERSECT",
                Distinct: false,
                Queries:  []parser.QueryExpr{
                  &parser.Select{
                    pos:      83,
                    Distinct: false,
                    AsStruct: false,
                    Results:  []parser.SelectItem{
                      &parser.Star{
                        pos: 90,
                      },
                    },
                    From: &parser.From{
                      pos:    92,
                      Source: &parser.TableName{
                        Table: &parser.Ident{
                          pos:  97,
                          end:  104,
                          Name: "Singers",
                        },
                        Hint:   (*parser.Hint)(nil),
                        As:     (*parser.AsAlias)(nil),
                        Sample: (*parser.TableSample)(nil),
                      },
                    },
                    Where:   (*parser.Where)(nil),
                    GroupBy: (*parser.GroupBy)(nil),
                    Having:  (*parser.Having)(nil),
                    OrderBy: (*parser.OrderBy)(nil),
                    Limit:   (*parser.Limit)(nil),
                  },
                  &parser.SubQuery{
                    pos:   127,
                    end:   362,
                    Query: &parser.CompoundQuery{
                      Op:       "INTERSECT",
                      Distinct: true,
                      Queries:  []parser.QueryExpr{
                        &parser.Select{
                          pos:      135,
                          Distinct: false,
                          AsStruct: false,
                          Results:  []parser.SelectItem{
                            &parser.Star{
                              pos: 142,
                            },
                          },
                          From: &parser.From{
                            pos:    144,
                            Source: &parser.TableName{
                              Table: &parser.Ident{
                                pos:  149,
                                end:  156,
                                Name: "Singers",
                              },
                              Hint:   (*parser.Hint)(nil),
                              As:     (*parser.AsAlias)(nil),
                              Sample: (*parser.TableSample)(nil),
                            },
                          },
                          Where:   (*parser.Where)(nil),
                          GroupBy: (*parser.GroupBy)(nil),
                          Having:  (*parser.Having)(nil),
                          OrderBy: (*parser.OrderBy)(nil),
                          Limit:   (*parser.Limit)(nil),
                        },
                        &parser.SubQuery{
                          pos:   188,
                          end:   356,
                          Query: &parser.CompoundQuery{
                            Op:       "EXCEPT",
                            Distinct: false,
                            Queries:  []parser.QueryExpr{
                              &parser.Select{
                                pos:      198,
                                Distinct: false,
                                AsStruct: false,
                                Results:  []parser.SelectItem{
                                  &parser.Star{
                                    pos: 205,
                                  },
                                },
                                From: &parser.From{
                                  pos:    207,
                                  Source: &parser.TableName{
                                    Table: &parser.Ident{
                                      pos:  212,
                                      end:  219,
                                      Name: "Singers",
                                    },
                                    Hint:   (*parser.Hint)(nil),
                                    As:     (*parser.AsAlias)(nil),
                                    Sample: (*parser.TableSample)(nil),
                                  },
                                },
                                Where:   (*parser.Where)(nil),
                                GroupBy: (*parser.GroupBy)(nil),
                                Having:  (*parser.Having)(nil),
                                OrderBy: (*parser.OrderBy)(nil),
                                Limit:   (*parser.Limit)(nil),
                              },
                              &parser.SubQuery{
                                pos:   247,
                                end:   348,
                                Query: &parser.CompoundQuery{
                                  Op:       "EXCEPT",
                                  Distinct: true,
                                  Queries:  []parser.QueryExpr{
                                    &parser.Select{
                                      pos:      259,
                                      Distinct: false,
                                      AsStruct: false,
                                      Results:  []parser.SelectItem{
                                        &parser.Star{
                                          pos: 266,
                                        },
                                      },
                                      From: &parser.From{
                                        pos:    268,
                                        Source: &parser.TableName{
                                          Table: &parser.Ident{
                                            pos:  273,
                                            end:  280,
                                            Name: "Singers",
                                          },
                                          Hint:   (*parser.Hint)(nil),
                                          As:     (*parser.AsAlias)(nil),
                                          Sample: (*parser.TableSample)(nil),
                                        },
                                      },
                                      Where:   (*parser.Where)(nil),
                                      GroupBy: (*parser.GroupBy)(nil),
                                      Having:  (*parser.Having)(nil),
                                      OrderBy: (*parser.OrderBy)(nil),
                                      Limit:   (*parser.Limit)(nil),
                                    },
                                    &parser.Select{
                                      pos:      317,
                                      Distinct: false,
                                      AsStruct: false,
                                      Results:  []parser.SelectItem{
                                        &parser.Star{
                                          pos: 324,
                                        },
                                      },
                                      From: &parser.From{
                                        pos:    326,
                                        Source: &parser.TableName{
                                          Table: &parser.Ident{
                                            pos:  331,
                                            end:  338,
                                            Name: "Singers",
                                          },
                                          Hint:   (*parser.Hint)(nil),
                                          As:     (*parser.AsAlias)(nil),
                                          Sample: (*parser.TableSample)(nil),
                                        },
                                      },
                                      Where:   (*parser.Where)(nil),
                                      GroupBy: (*parser.GroupBy)(nil),
                                      Having:  (*parser.Having)(nil),
                                      OrderBy: (*parser.OrderBy)(nil),
                                      Limit:   (*parser.Limit)(nil),
                                    },
                                  },
                                  OrderBy: (*parser.OrderBy)(nil),
                                  Limit:   (*parser.Limit)(nil),
                                },
                                OrderBy: (*parser.OrderBy)(nil),
                                Limit:   (*parser.Limit)(nil),
                              },
                            },
                            OrderBy: (*parser.OrderBy)(nil),
                            Limit:   (*parser.Limit)(nil),
                          },
                          OrderBy: (*parser.OrderBy)(nil),
                          Limit:   (*parser.Limit)(nil),
                        },
                      },
                      OrderBy: (*parser.OrderBy)(nil),
                      Limit:   (*parser.Limit)(nil),
                    },
                    OrderBy: (*parser.OrderBy)(nil),
                    Limit:   (*parser.Limit)(nil),
                  },
                },
                OrderBy: (*parser.OrderBy)(nil),
                Limit:   (*parser.Limit)(nil),
              },
              OrderBy: (*parser.OrderBy)(nil),
              Limit:   (*parser.Limit)(nil),
            },
          },
          OrderBy: (*parser.OrderBy)(nil),
          Limit:   (*parser.Limit)(nil),
        },
        OrderBy: (*parser.OrderBy)(nil),
        Limit:   (*parser.Limit)(nil),
      },
    },
    OrderBy: (*parser.OrderBy)(nil),
    Limit:   (*parser.Limit)(nil),
  },
}

--- SQL
SELECT * FROM Singers UNION ALL (SELECT * FROM Singers UNION DISTINCT (SELECT * FROM Singers INTERSECT ALL (SELECT * FROM Singers INTERSECT DISTINCT (SELECT * FROM Singers EXCEPT ALL (SELECT * FROM Singers EXCEPT DISTINCT SELECT * FROM Singers)))))

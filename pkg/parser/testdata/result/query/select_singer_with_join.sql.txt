--- select_singer_with_join.sql
SELECT
  *
FROM
  Singers A
  LEFT OUTER JOIN
  Singers B
  ON A.SingerID = B.SingerID

--- AST
&parser.QueryStatement{
  Hint: (*parser.Hint)(nil),
  Expr: &parser.Select{
    pos:      0,
    end:      86,
    Distinct: false,
    AsStruct: false,
    List:     parser.SelectExprList{
      &parser.SelectExpr{
        pos:  9,
        end:  10,
        Expr: nil,
        Star: true,
        As:   (*parser.Ident)(nil),
      },
    },
    From: parser.FromItemList{
      &parser.FromItem{
        end:  86,
        Expr: &parser.Join{
          Op:     "LEFT OUTER",
          Method: "",
          Hint:   (*parser.Hint)(nil),
          Left:   &parser.TableName{
            end:   27,
            Ident: &parser.Ident{
              pos:  18,
              end:  25,
              Name: "Singers",
            },
            Hint: (*parser.Hint)(nil),
            As:   &parser.Ident{
              pos:  26,
              end:  27,
              Name: "A",
            },
          },
          Right: &parser.TableName{
            end:   57,
            Ident: &parser.Ident{
              pos:  48,
              end:  55,
              Name: "Singers",
            },
            Hint: (*parser.Hint)(nil),
            As:   &parser.Ident{
              pos:  56,
              end:  57,
              Name: "B",
            },
          },
          Cond: &parser.JoinCondition{
            pos: 60,
            end: 86,
            On:  &parser.BinaryExpr{
              Op:   "=",
              Left: &parser.SelectorExpr{
                Left: &parser.Ident{
                  pos:  63,
                  end:  64,
                  Name: "A",
                },
                Right: &parser.Ident{
                  pos:  65,
                  end:  73,
                  Name: "SingerID",
                },
              },
              Right: &parser.SelectorExpr{
                Left: &parser.Ident{
                  pos:  76,
                  end:  77,
                  Name: "B",
                },
                Right: &parser.Ident{
                  pos:  78,
                  end:  86,
                  Name: "SingerID",
                },
              },
            },
            Using: parser.IdentList{},
          },
        },
        Method: "",
        Num:    nil,
        Rows:   false,
      },
    },
    Where:   nil,
    GroupBy: parser.ExprList{},
    Having:  nil,
    OrderBy: parser.OrderExprList{},
    Limit:   (*parser.Limit)(nil),
  },
}

--- SQL
SELECT * FROM Singers AS A LEFT OUTER JOIN Singers AS B ON A.SingerID = B.SingerID

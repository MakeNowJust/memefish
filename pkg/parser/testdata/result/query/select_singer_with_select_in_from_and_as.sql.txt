--- select_singer_with_select_in_from_and_as.sql
SELECT
  *
FROM (
  SELECT
    *
  FROM
    Singers
  WHERE
    SingerID = 1
) as S

--- AST
&parser.QueryStatement{
  Hint:  (*parser.Hint)(nil),
  Query: &parser.Select{
    pos:      0,
    Distinct: false,
    AsStruct: false,
    Results:  []parser.SelectItem{
      &parser.Star{
        pos: 9,
      },
    },
    From: &parser.From{
      pos:    11,
      Source: &parser.SubQueryTableExpr{
        pos:   16,
        end:   83,
        Query: &parser.Select{
          pos:      20,
          Distinct: false,
          AsStruct: false,
          Results:  []parser.SelectItem{
            &parser.Star{
              pos: 31,
            },
          },
          From: &parser.From{
            pos:    35,
            Source: &parser.TableName{
              Table: &parser.Ident{
                pos:  44,
                end:  51,
                Name: "Singers",
              },
              Hint:   (*parser.Hint)(nil),
              As:     (*parser.AsAlias)(nil),
              Sample: (*parser.TableSample)(nil),
            },
          },
          Where: &parser.Where{
            pos:  54,
            Expr: &parser.BinaryExpr{
              Op:   "=",
              Left: &parser.Ident{
                pos:  64,
                end:  72,
                Name: "SingerID",
              },
              Right: &parser.IntLiteral{
                pos:   75,
                end:   76,
                Base:  10,
                Value: "1",
              },
            },
          },
          GroupBy: (*parser.GroupBy)(nil),
          Having:  (*parser.Having)(nil),
          OrderBy: (*parser.OrderBy)(nil),
          Limit:   (*parser.Limit)(nil),
        },
        As: &parser.AsAlias{
          pos:   79,
          Alias: &parser.Ident{
            pos:  82,
            end:  83,
            Name: "S",
          },
        },
        Sample: (*parser.TableSample)(nil),
      },
    },
    Where:   (*parser.Where)(nil),
    GroupBy: (*parser.GroupBy)(nil),
    Having:  (*parser.Having)(nil),
    OrderBy: (*parser.OrderBy)(nil),
    Limit:   (*parser.Limit)(nil),
  },
}

--- SQL
SELECT * FROM (SELECT * FROM Singers WHERE SingerID = 1) AS S
